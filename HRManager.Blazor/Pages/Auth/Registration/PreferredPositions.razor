@using Syncfusion.Blazor.Buttons
@using Services
@inherits RegisterSectionBase
@inject PositionsService _posService

@code {
    class PositonSelection
    {
        public bool PositionWasSelected { get; set; }
    }

    private PreferredPositionsData posData = new PreferredPositionsData();
    private List<Position> positions = new List<Position>();
    private Dictionary<Position, PositonSelection> preferredPositions = new Dictionary<Position, PositonSelection>();

    protected override async Task OnInitializedAsync()
    {
        positions = await _posService.GetPositions();

        foreach (var pos in positions)
        {
            preferredPositions.Add(pos, new PositonSelection { PositionWasSelected = false});
        }
    }

    protected override async Task GoToNextSection()
    {
        ExtractSelectedPositionsFromForm();

        data = posData;
        await base.GoToNextSection();
    }

    private void ExtractSelectedPositionsFromForm()
    {
        foreach (var pos in preferredPositions)
        {
            if (pos.Value.PositionWasSelected)
            {
                posData.Positions.Add(pos.Key);
            }
        }
    }
}

<h5>What volunteering positions interest you most?</h5>
<br/>
<EditForm Model="preferredPositions" OnValidSubmit="GoToNextSection">
    <DataAnnotationsValidator />
    <div id="positions-container" class="row">
        @foreach (var position in positions)
        {
            <div class="position-container form-group col-3">
                <SfCheckBox @bind-Checked="preferredPositions[position].PositionWasSelected" />
                <label class="form-check-label">@position.Name</label>
            </div>
        }
    </div>
    <RegisterSectionButtonContainer PreviousSectionRequested="HandlePreviousSectionRequested" />
</EditForm>

