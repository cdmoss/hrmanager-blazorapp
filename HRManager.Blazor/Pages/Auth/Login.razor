@layout AuthLayout
@page "/"
@page "/auth/login"
@using HRManager.Common.Dtos
@using HRManager.Blazor.Services
@using Microsoft.AspNetCore.Components.Authorization
@inject IAuthService _authService
@inject NavigationManager _nav

@code {
    // TODO: Add redirect URI

    // must create instance of model to be bound*******
    private LoginDto loginDto = new LoginDto();

    [CascadingParameter]
    private Task<AuthenticationState> authState { get; set; }
    private bool invalidCreds = false;

    protected override async Task OnInitializedAsync()
    {
        await _authService.Logout();
    }

    private async Task LoginUser()
    {
        var loginResult = await _authService.Login(loginDto);
        if (loginResult.Successful)
        {
            var user = (await authState).User;

            if (user.IsInRole("Admin") || user.IsInRole("SuperAdmin"))
            {
                _nav.NavigateTo("/admin/members");
            }
            else
            {
                _nav.NavigateTo("/member/calendar");
            }
        }
        else
        {
            invalidCreds = true;
        }
    }

    private void GoToRegistration()
    {
        _nav.NavigateTo("/auth/register");
    }
}

<div id="login-form" class="card bg-light p-5">
    <div id="img-container">
        <img src="/MHFB.png" alt="MHFB Logo" />
    </div>
    <div id="form-container">
        <h2>Member Sign In</h2>
        <br />
        <EditForm Model="loginDto" OnValidSubmit="@LoginUser">
            <DataAnnotationsValidator />
            @{
                if (invalidCreds)
                {
                    <div class="alert alert-danger alert-dismissible" role="alert">
                        <button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                        Invalid username or password. Please try again.
                    </div>
                }
            }
            <div class="form-group">
                <label class="form-label">Email:</label>
                <div>
                    <SfTextBox ID="email" Type="InputType.Email" @bind-Value="loginDto.Email" />
                    <ValidationMessage For="@(() => loginDto.Email)" />
                </div>
            </div>
            <div class="form-group mb-0">
                <label class="form-label">Password:</label>
                <div>
                    <SfTextBox ID="password" Type="InputType.Password" class="form-control" @bind-Value="loginDto.Password" />
                    <ValidationMessage For="@(() => loginDto.Password)" />
                </div>
            </div>
            <div>
                <a id="forgot-link" href="#">Click here if you forgot your password</a>
                <div id="btn-container" class="mt-5">
                    <button type="submit" id="login-btn" class="btn btn-primary">Login</button>
                    <button type="button" id="register-btn" @onclick="GoToRegistration" class="btn btn-outline-primary">Become A Volunteer</button>
                </div>
            </div>
        </EditForm>
    </div>
</div>
