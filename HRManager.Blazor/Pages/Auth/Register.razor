@layout AuthLayout
@page "/auth/register"
@using HRManager.Common.Dtos
@using HRManager.Common.Auth
@using HRManager.Blazor.Services
@using HRManager.Blazor.Pages.Auth.Registration
@inject NavigationManager _nav

@code {
        // TODO: Add redirect URI

        // must create instance of model to be bound*******
    private MemberRegisterDto mainDto = new MemberRegisterDto() { };
    private int currentSection = 1;

    private bool ShowErrors;
    private IEnumerable<string> Errors;

    private void HandleSectionCompleted<TSection>(RegisterSectionData sectionData) where TSection : RegisterSectionData
    {
        currentSection++;
        ((TSection)sectionData).AddSectionToMainDto(mainDto);
        StateHasChanged();
    }

    private void HandlePreviousSectionRequested()
    {
        currentSection--;
        StateHasChanged();
    }

    private void HandleRegistrationSubmitted(RegisterResult result)
    {

    }
}

@if (ShowErrors)
{
    <div class="alert alert-danger" role="alert">
        @foreach (var error in Errors)
        {
            <p>@error</p>
        }
    </div>
}

<div id="register-form" class="card bg-light p-5">
    <div id="img-container">
        <img src="/MHFB.png" alt="MHFB Logo" />
    </div>
    <div id="form-container">
        @switch (currentSection)
        {
            case 0:
                _nav.NavigateTo("/auth/login");
                break;
            case 1:
                <Availability SectionCompleted="HandleSectionCompleted<AvailabilitiesData>" PreviousSectionRequested="HandlePreviousSectionRequested" />
                @*<AccountCreds SectionCompleted="HandleSectionCompleted<AccountData>" PreviousSectionRequested="HandlePreviousSectionRequested" />*@
                break;
            case 2:
                <PersonalAndContact SectionCompleted="HandleSectionCompleted<PersonalAndContactData>" PreviousSectionRequested="HandlePreviousSectionRequested" />
                break;
            case 3:
                <PreferredPositions SectionCompleted="HandleSectionCompleted<PreferredPositionsData>" PreviousSectionRequested="HandlePreviousSectionRequested" />
                break;
            case 4:
                @*<Availability SectionCompleted="HandleSectionCompleted<AvailabilitiesData>" PreviousSectionRequested="HandlePreviousSectionRequested" />*@
                break;
            case 5:
                <Qualifications SectionCompleted="HandleSectionCompleted<QualificationsData>" PreviousSectionRequested="HandlePreviousSectionRequested" />
                break;
            case 6:
                <Certificates SectionCompleted="HandleSectionCompleted<CertificatesData>" PreviousSectionRequested="HandlePreviousSectionRequested" />
                break;
            case 7:
                <Review />
                break;
        }
    </div>
</div>

